{"version":3,"sources":["firebase.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CustomListItem.js","Screens/HomeScreen.js","Screens/AddChatScreen.js","Screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","console","log","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","raised","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTinColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","add","goBack","Text","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerTitleAlign","headerTitle","params","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","keyboardVerticalOffset","Platform","OS","TouchableWithoutFeedback","contentContainerStyle","paddingTop","receiver","position","bottom","right","receiverText","sender","left","senderText","senderName","footer","TextInput","textInput","borderRadius","paddingRight","fontSize","alignSelf","maxWidth","margin","Stack","createNativeStackNavigator","globalScreenOptions","headerTintColor","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.26f7e91e.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDsTAqbWYxKE92GfhPATQLokVSWCD1hPog\",\r\n  authDomain: \"signal-clone-42b90.firebaseapp.com\",\r\n  projectId: \"signal-clone-42b90\",\r\n  storageBucket: \"signal-clone-42b90.appspot.com\",\r\n  messagingSenderId: \"598244891101\",\r\n  appId: \"1:598244891101:web:53ba1c5210f3868922be34\",\r\n};\r\n\r\nlet app;\r\n\r\nif (firebase.apps.length === 0) {\r\n  app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  app = firebase.app();\r\n}\r\n\r\nconst db = app.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth, db };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input, Image, Text } from \"react-native-elements\";\r\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      console.log(authUser);\r\n      if (authUser) {\r\n        navigation.replace(\"Home\");\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n\r\n      <Image\r\n        source={{\r\n          uri: \"https://img.icons8.com/color/480/signal-app.png\",\r\n        }}\r\n        style={{ width: 200, height: 200 }}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder=\"Email\"\r\n          autoFocus\r\n          type=\"email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n\r\n        <Input\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          type=\"password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          onSubmitEditing={signIn}\r\n        />\r\n      </View>\r\n\r\n      <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\r\n      <Button\r\n        onPress={() => navigation.navigate(\"Register\")}\r\n        containerStyle={styles.button}\r\n        type=\"outline\"\r\n        title=\"Register\"\r\n      />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n});\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\r\nimport { Button, Input, Text } from \"react-native-elements\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackTitle: \"Back to Login\",\r\n    });\r\n  }, [navigation]);\r\n\r\n  const register = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: name,\r\n          photoURL: imageUrl,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n\r\n      <Text h3 style={{ marginBottom: 50 }}>\r\n        Create a Signal account\r\n      </Text>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder=\"Full Name\"\r\n          autoFocus\r\n          type=\"text\"\r\n          value={name}\r\n          onChangeText={(text) => setName(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"password\"\r\n          type=\"password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Profile Picture URL (optional)\"\r\n          type=\"text\"\r\n          value={imageUrl}\r\n          onChangeText={(text) => setImageUrl(text)}\r\n          onSubmitEditing={register}\r\n        />\r\n      </View>\r\n\r\n      <Button\r\n        containerStyle={styles.button}\r\n        raised\r\n        onPress={register}\r\n        title=\"Register\"\r\n      />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n});\r\n","import { View, Text } from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ListItem, Avatar } from \"react-native-elements\";\r\nimport { db } from \"../firebase\";\r\n\r\nexport default function CustomListItem({ id, chatName, enterChat }) {\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unSubscribe = db\r\n      .collection(\"chats\")\r\n      .doc(id)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\")\r\n      .onSnapshot((snapshot) =>\r\n        setChatMessages(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n    return unSubscribe;\r\n  });\r\n\r\n  return (\r\n    <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\r\n      <Avatar\r\n        rounded\r\n        source={{\r\n          uri: chatMessages?.[0]?.photoURL,\r\n        }}\r\n      />\r\n      <ListItem.Content>\r\n        <ListItem.Title style={{ fontWeight: \"800\" }}>\r\n          {chatName}\r\n        </ListItem.Title>\r\n        <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\r\n          {chatMessages?.[0]?.displayName} : {chatMessages?.[0]?.message}\r\n        </ListItem.Subtitle>\r\n      </ListItem.Content>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport CustomListItem from \"../components/CustomListItem\";\r\nimport { auth, db } from \"../firebase\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n\r\n  const signOutUser = () => {\r\n    auth.signOut().then(() => {\r\n      navigation.replace(\"Login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"chats\").onSnapshot((snapshot) =>\r\n      setChats(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Signal\",\r\n      headerStyle: { backgroundColor: \"#fff\" },\r\n      headerTitleStyle: { color: \"#000\" },\r\n      headerTinColor: \"#000\",\r\n      headerLeft: () => (\r\n        <View style={{ marginLeft: 15 }}>\r\n          <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n            <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n      headerRight: () => (\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: 80,\r\n            marginRight: 20,\r\n          }}\r\n        >\r\n          <TouchableOpacity activeOpacity={0.5}>\r\n            <AntDesign name=\"camerao\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"AddChat\")}\r\n            activeOpacity={0.5}\r\n          >\r\n            <SimpleLineIcons name=\"pencil\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n    });\r\n  }, [navigation]);\r\n\r\n  const enterChat = (id, chatName) => {\r\n    navigation.navigate(\"Chat\", {\r\n      id,\r\n      chatName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView style={styles.container}>\r\n        {chats.map(({ id, data: { chatName } }) => (\r\n          <CustomListItem\r\n            id={id}\r\n            chatName={chatName}\r\n            key={id}\r\n            enterChat={enterChat}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Button, Input } from \"react-native-elements\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst AddChatScreen = ({ navigation }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Add a new chat\",\r\n      headerBackTitle: \"Chats\",\r\n    });\r\n  }, [navigation]);\r\n\r\n  const createChat = async () => {\r\n    await db\r\n      .collection(\"chats\")\r\n      .add({\r\n        chatName: input,\r\n      })\r\n      .then(() => {\r\n        navigation.goBack();\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>AddChatScreen</Text>\r\n      <Input\r\n        placeholder=\"Enter chat name\"\r\n        value={input}\r\n        onChangeText={(text) => setInput(text)}\r\n        onSubmitEditing={createChat}\r\n        leftIcon={\r\n          <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\r\n        }\r\n      />\r\n      <Button disabled={!input} onPress={createChat} title=\"Create new Chat\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddChatScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    padding: 30,\r\n    height: \"100%\",\r\n  },\r\n});\r\n","import {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TextInput,\r\n  StatusBar,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport React, { useLayoutEffect, useState } from \"react\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport default function ChatScreen({ navigation, route }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Chat\",\r\n      //headerBackTitleVisible: false,\r\n      headerTitleAlign: \"left\",\r\n      headerTitle: () => (\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"Home\")}\r\n            activeOpacity={0.5}\r\n          >\r\n            <Avatar\r\n              rounded\r\n              source={{\r\n                uri: messages[0]?.data.photoURL,\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n          <Text style={{ color: \"#fff\", marginLeft: 10, fontWeight: \"700\" }}>\r\n            {route.params.chatName}\r\n          </Text>\r\n        </View>\r\n      ),\r\n      headerLeft: () => <TouchableOpacity></TouchableOpacity>,\r\n      headerRight: () => (\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: 80,\r\n            marginRight: 20,\r\n          }}\r\n        >\r\n          <TouchableOpacity>\r\n            <FontAwesome name=\"video-camera\" size={24} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity>\r\n            <Ionicons name=\"call\" size={24} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n    });\r\n  }, [navigation, messages]);\r\n\r\n  const sendMessage = () => {\r\n    Keyboard.dismiss();\r\n\r\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      message: input,\r\n      displayName: auth.currentUser.displayName,\r\n      email: auth.currentUser.email,\r\n      photoURL: auth.currentUser.photoURL,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const unSubscribe = db\r\n      .collection(\"chats\")\r\n      .doc(route.params.id)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setMessages(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n    return unSubscribe;\r\n  }, [route]);\r\n\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n      }}\r\n    >\r\n      <StatusBar style=\"light\" />\r\n      <KeyboardAvoidingView\r\n        keyboardVerticalOffset={90}\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n        style={styles.container}\r\n      >\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <>\r\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\r\n              {messages.map(({ id, data }) =>\r\n                data.email === auth.currentUser.email ? (\r\n                  <View key={id} style={styles.receiver}>\r\n                    <Avatar\r\n                      position=\"absolute\"\r\n                      containerStyle={{\r\n                        position: \"absolute\",\r\n                        bottom: -15,\r\n                        right: -5,\r\n                      }}\r\n                      rounded\r\n                      bottom={-15}\r\n                      right={-5}\r\n                      size={30}\r\n                      source={{\r\n                        uri: data.photoURL,\r\n                      }}\r\n                    />\r\n                    <Text style={styles.receiverText}>{data.message}</Text>\r\n                  </View>\r\n                ) : (\r\n                  <View key={id} style={styles.sender}>\r\n                    <Avatar\r\n                      position=\"absolute\"\r\n                      containerStyle={{\r\n                        position: \"absolute\",\r\n                        bottom: -15,\r\n                        left: -5,\r\n                      }}\r\n                      rounded\r\n                      bottom={-15}\r\n                      left={-5}\r\n                      size={30}\r\n                      source={{\r\n                        uri: data.photoURL,\r\n                      }}\r\n                    />\r\n                    <Text style={styles.senderText}>{data.message}</Text>\r\n                    <Text style={styles.senderName}>{data.displayName}</Text>\r\n                  </View>\r\n                )\r\n              )}\r\n            </ScrollView>\r\n            <View style={styles.footer}>\r\n              <TextInput\r\n                value={input}\r\n                onChangeText={(text) => setInput(text)}\r\n                onSubmitEditing={sendMessage}\r\n                placeholder=\"Single Message\"\r\n                style={styles.textInput}\r\n              />\r\n              <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\r\n                <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: 15,\r\n  },\r\n  textInput: {\r\n    bottom: 0,\r\n    height: 40,\r\n    flex: 1,\r\n    marginRight: 15,\r\n    backgroundColor: \"#ECECEC\",\r\n    padding: 10,\r\n    color: \"gray\",\r\n    borderRadius: 30,\r\n  },\r\n\r\n  senderText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n    marginLeft: 10,\r\n    marginBottom: 15,\r\n  },\r\n\r\n  senderName: {\r\n    left: 10,\r\n    paddingRight: 10,\r\n    fontSize: 10,\r\n    color: \"#fff\",\r\n  },\r\n  receiver: {\r\n    padding: 15,\r\n    backgroundColor: \"#ECECEC\",\r\n    alignSelf: \"flex-end\",\r\n    borderRadius: 20,\r\n    marginRight: 15,\r\n    marginBottom: 20,\r\n    maxWidth: \"80%\",\r\n    position: \"relative\",\r\n  },\r\n  sender: {\r\n    padding: 15,\r\n    backgroundColor: \"#2068E6\",\r\n    alignSelf: \"flex-start\",\r\n    borderRadius: 20,\r\n    margin: 15,\r\n    maxWidth: \"80%\",\r\n    position: \"relative\",\r\n  },\r\n  receiverText: {\r\n    color: \"#000\",\r\n    fontWeight: \"500\",\r\n    marginLeft: 10,\r\n  },\r\n});\r\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport RegisterScreen from \"./Screens/RegisterScreen\";\nimport HomeScreen from \"./Screens/HomeScreen.js\";\nimport AddChatScreen from \"./Screens/AddChatScreen\";\nimport ChatScreen from \"./Screens/ChatScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={globalScreenOptions}>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}